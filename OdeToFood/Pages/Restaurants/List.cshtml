@page 

@model OdeToFood.ListModel
@{
    ViewData["Title"] = "List";
}

<h1>Restaurants</h1>
<h3>That defaulted to List, presumably based on the name of the model.</h3>

<p>
    The at signs are directives. At-page means it's a Razor Page. At-model identifies the model -- ie,
    this will show an instance of the ListModel class. The ListModel class is found in the .cs file behind this page.
</p>
<p>More generally, the at sign shows a transition between writing html and C#.</p>
<p>So this page is like the view in MVC and the .cs file is like the model.</p>
<br />

<br />

<h1>List of restaurants</h1>
<table class="table">
    @foreach (var restaurant in Model.Restaurants)
    {
        <tr>
            <td>@restaurant.Name</td>
            <td>@restaurant.Location</td>
            <td>@restaurant.Cuisine</td>
            <td>
                <a class="btn-outline-warning btn-lg" asp-page="./Detail" asp-route-restaurantId="@restaurant.Id">
                    <i class="glyphicon glyphicon-zoom-in">Details</i>
                </a>
                <a class="btn-outline-warning btn-lg" asp-page="./Edit" asp-route-restaurantId="@restaurant.Id">
                    <i class="glyphicon glyphicon-edit">Edit</i>
                </a>
            </td>
        </tr>
    }

</table>

<form method="get">
    <div class="form-group">
        <div class="input-group">
            <input type="search" class="form-control" asp-for="SearchTerm" />
            <span class="input-group-btn">
                <button class="btn btn-default">
                    <i class="glyphicon glyphicon-search"></i>
                </button>
            </span>
        </div>
    </div>

</form>

<a asp-page=".\Edit" class="btn btn-primary">Add new restaurant</a>